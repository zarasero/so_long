Для проекта **so_long**, который обычно заключается в создании простой 2D-игры с использованием библиотеки MiniLibX, нужно провести тщательные проверки всех аспектов программы: от работы с картами до взаимодействия игрока и корректной обработки ошибок. Программа должна полностью соответствовать заданию, быть играбельной и корректно реагировать на все события. Ниже приведен полный список тестов для проверки работы проекта **so_long**.

### 1. Проверка карты

#### Тест 1: Корректные карты разных размеров
- **Цель**: Убедитесь, что игра корректно отображает карту и правильно устанавливает начальную позицию игрока.
- **Тесты**:
  - Карта минимального размера (например, 3x3) с одним выходом, коллекционным предметом и игроком.
  - Карта среднего размера (например, 10x10) с несколькими стенами, предметами и выходами.
  - Большая карта (например, 50x50) для проверки производительности и правильного отображения элементов.

#### Тест 2: Линии разной длины
- **Цель**: Карта должна иметь одинаковое количество символов в каждой строке.
- **Тест**: Создайте карту с неправильным количеством символов в одной из строк. Программа должна вывести ошибку о неверной конфигурации карты.

#### Тест 3: Некорректные символы на карте
- **Цель**: Убедитесь, что игра корректно реагирует на наличие недопустимых символов в файле карты.
- **Тест**: Добавьте на карту символы, не входящие в список допустимых (например, 'X'). Программа должна сообщить об ошибке и завершиться.

#### Тест 4: Проверка на дубликаты или отсутствие обязательных элементов
- **Цель**: На карте должен быть только один игрок, один выход и хотя бы один коллекционный предмет.
- **Тесты**:
  - Карта с более чем одним игроком.
  - Карта без коллекционных предметов.
  - Карта без выхода.
  В каждом из случаев программа должна вывести соответствующую ошибку.

#### Тест 5: Стены по краям карты
- **Цель**: Все края карты должны быть окружены стенами.
- **Тест**: Создайте карту, у которой не все края окружены стенами. Программа должна вернуть ошибку.

### 2. Проверка пользовательских событий

#### Тест 6: Закрытие окна по нажатию на крестик
- **Цель**: При нажатии на крестик в углу окна программа должна корректно завершиться.
- **Тест**: Нажмите крестик, окно должно закрыться, и программа должна завершить работу без сбоев.

#### Тест 7: Выход из игры через ESC
- **Цель**: Нажатие клавиши ESC (или другой назначенной клавиши) должно корректно завершить игру.
- **Тест**: Нажмите ESC в игре. Программа должна корректно завершиться.

#### Тест 8: Движение игрока
- **Цель**: Игрок должен перемещаться при нажатии стрелок или клавиш WASD (или ZQSD).
- **Тест**: Проверьте, что игрок может двигаться в любом направлении по карте, а также не может проходить сквозь стены.

#### Тест 9: Движение по всей карте
- **Цель**: Убедитесь, что игрок может перемещаться по всей карте и что игра играбельна.
- **Тест**: Игрок должен перемещаться свободно по игровому полю, взаимодействуя с объектами.

### 3. Проверка объектов на карте

#### Тест 10: Коллекционные предметы
- **Цель**: Игрок должен собирать предметы, наступая на них.
- **Тест**: При достижении коллекционного предмета игрок должен собирать его, и предмет должен исчезать с карты.

#### Тест 11: Выход после сбора всех предметов
- **Цель**: Игрок должен иметь возможность выйти только после сбора всех коллекционных предметов.
- **Тест**: Попробуйте пройти через выход до сбора всех предметов — это должно быть запрещено. После сбора всех предметов выход должен стать доступным.

#### Тест 12: Текстуры стен
- **Цель**: Стены должны корректно отображаться, и игрок не должен иметь возможность проходить сквозь них.
- **Тест**: Проверьте, что стены правильно текстурированы, и игрок не может пересечь границы стен.

### 4. Технические элементы дисплея

#### Тест 13: Стабильность окна
- **Цель**: Окно должно оставаться открытым в течение всего времени выполнения программы, даже если его скрыть или свернуть.
- **Тесты**:
  - Сверните и разверните окно, оно должно корректно восстановиться без изменений.
  - Измените размеры окна экрана. Окно должно отображаться корректно.

#### Тест 14: Соответствие карты
- **Цель**: Убедитесь, что все объекты и элементы на карте отображаются в соответствии с данными карты.
- **Тест**: Карта в файле должна точно соответствовать карте, отображаемой на экране. Игрок должен появляться на той позиции, где он обозначен на карте.

### 5. Игровые элементы

#### Тест 15: Счетчик движений
- **Цель**: На экране должен отображаться счетчик движений игрока, который увеличивается с каждым шагом.
- **Тест**: Сделайте несколько движений, и проверьте, что счетчик корректно увеличивается.

### 6. Использование MiniLibX

#### Тест 16: Рендеринг с использованием MiniLibX
- **Цель**: Проверьте, использует ли программа функции MiniLibX для рендеринга изображений, а не индивидуальные пиксели.
- **Тест**: Взгляните на код программы и убедитесь, что для рендеринга используются правильные функции MLX.

### 7. Бонусные тесты (если обязательная часть выполнена)

#### Тест 17: Враги
- **Цель**: В игре могут быть враги, которые патрулируют карту. При столкновении с врагом игрок должен проигрывать.
- **Тест**: Проверьте, что враги движутся по карте, и что при столкновении игра завершается с проигрышем игрока.

#### Тест 18: Анимация спрайтов
- **Цель**: Убедитесь, что на экране присутствует анимация спрайтов.
- **Тест**: Взгляните на анимацию объектов (например, врагов или предметов) и убедитесь, что она работает корректно.

---

Этот набор тестов охватывает как обязательную, так и бонусную части проекта **so_long**, проверяя все важные аспекты: корректность отображения карты, обработку ошибок, взаимодействие игрока с объектами и стабильность программы.
